services:
  gateway:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile
      target: development
    command: >
      sh -c "apk add --no-cache curl &&
             pnpm run start:debug gateway -- --inspect=0.0.0.0:9229 --nolazy"
    ports:
      - 3000:3000
      - 9229:9229
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/gateway/.env
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth:
        condition: service_started
    networks:
      - boilerplate
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: >
      sh -c "apk add --no-cache curl &&
             pnpm run start:debug auth -- --inspect=0.0.0.0:9229 --nolazy"
    env_file:
      - ./apps/auth/.env
    ports:
      - 3001:3001
      - 9230:9229
    volumes:
      - .:/usr/src/app
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - boilerplate
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    command: >
      sh -c "apk add --no-cache curl &&
             pnpm run start:debug notifications -- --inspect=0.0.0.0:9229 --nolazy"
    ports:
      - 3002:3002
      - 9231:9229
    env_file:
      - ./apps/notifications/.env
    volumes:
      - .:/usr/src/app
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - boilerplate
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3002/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  mongodb:
    image: mongo:latest
    ports:
      - '27018:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - boilerplate
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - boilerplate
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - boilerplate
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  boilerplate:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
